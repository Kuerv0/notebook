--------------------------------------------------------------------------------
Clase 1 
--------------------------------------------------------------------------------
Sat Aug 19 08:03:38 2023

Profesor: Juan Camilo Herrera Pineda
email: jherrerapi@unal.edu.co

Def. Corriente eléctrica
Def. Voltaje
Def. Resistencia
  Código de colores de resistencias
Def. Circuito en serie

Resistencia total circuito en serie es la sumatoria de todas las resistencias
Rt = \sum{r_{i}}

Ley de Ohm
I = V/R

Def. Circuito en paralelo
1 / Rt = \sum{1 / r_{i}}

¿Qué es Arduino?
Es una placa de desarrollo con hardware libre y el IDE es de código abierto.

Iniciando con Arduino

1. Descargar el entorno Arduino
2. Conectar el Arduino

Estructura del lenguaje de programación Arduino

void setup(){
  Declaraciones
}

void loop(){
  Declaraciones
}

La función setup() es la primera función a ejecutar en el programa, es ejecutada
una vez y es usada como configuración.

La función loop() se ejecuta continuamente en forma secuencial. Como leer
entradas y salidas.

Instrucciones de E/S digitales

- Hay 14 pines de e/s digitales de 0 al 12+1.
- Al ser digitales, los valores que se leen y/o escriben 0 y 1.

Instrucciones de E/S análogas

- Hay 6 pines de E/S digitales numerados del A0 al A5
- Al ser analógicos, siempre son de lectura (no necesita la instrucción 
pinMode)

Señal digital vs señal análoga

La señal digital es discreta, mientras que la señal análoga es continua.

En la señal análoga el conversor cuenta con 10 bits para almacenar el voltaje.

Entonces la resolución = Vt/1023
  Ejemplo con 5 voltios, la resolución es igual a 5/1023 => 0.005...

Pin PWM (Modulación por ancho de pulso)

- Hay 6 pines PWM...
[Ver diapositivas]

Def. Funciones

Elementos del lenguaje

Bloques de comentarios => /* */
Comentarios de una sola línea => //

Tipos de variables

- boolean
- byte
- char 
- int
- word
- long
- unsigned long
- float/double
- string
- array

If, else...

While...

For...

Switch...

Tinkercad
url: https://www.tinkercad.com/login

Tarea: Examinar tinkercad

--------------------------------------------------------------------------------
Práctica
--------------------------------------------------------------------------------

Valor de las resistencias:

R1 teorico: 220 Ohms
R1 medido: 213 Ohms

R2 teorico: 220 Ohms
R2 medido: 216 Ohms

R3 teorico: 1000 Ohms
R3 medido: 979 Ohms

R4 teorico: 1000 Ohms
R4 medido: 969 Ohms

Para el circuito en serie:

R1 = 220 Ohms
R2 = 1000 Ohms
R3 = 1000 Ohms

I = 0.005 A
Resistencia total = 2.2K Ohms | medido: 2.15K Ohms
Voltaje resistencia 1 = 1.1 V | medido: 1.02 V
Voltaje resistencia 1 = 5 V   | medido: 4.70 V
Voltaje resistencia 1 = 5 V   | medido: 4.80 V

Circuito paralelo

R1 = 220 Ohms
R2 = 1000 Ohms
R3 = 1000 Ohms

V total = 12 V
I total = 0.08 A
R total = 152.8 Ohms | medido: 148 Ohms

I resistencia 1 = 0.05 A
I resistencia 2 = 0.012 A
I resistencia 3 = 0.012 A

--------------------------------------------------------------------------------
Clase 2 
--------------------------------------------------------------------------------
Sat Aug 26 08:00:11 2023

Pull-up

if (digitalRead(pin) == LOW){
  while(!digitalRead(pin)){
    
  }
  count++
}

Pull-down

if (digitalRead(pin) == HIGH){
  while(digitalRead(pin)){
  }
  
  count++
}

--------------------------------------------------------------------------------
Clase 3 
--------------------------------------------------------------------------------
Sat Sep  2 08:00:14 2023

No hubo casi teoría.
Se hizo un contador con sensores.

Sat Sep  2 15:09:11 2023

--------------------------------------------------------------------------------
Clase 4 
--------------------------------------------------------------------------------
Sat Sep 16 08:00:51 2023
Esperando que inicie la clase y lleguen los panas.

No se debe configurar la entrada analoga como pinmode

vol = analgoRead(variable) * 0.048828125

#include <Arduinio.h>
#include <LiquidCrystal.h>

#define poto A0

LiquidCrystal lcd(2,3,4,5,6,7);

float vol = 0.0;

void setup(){
  lcd.begin(16, 2);
  lcd.setCursor(4,0);
  lcd.print("Entrada analoga");
}

void loop(){
  vol = analogRead(pot) * 0.0048828125;
  lcd.setCursor(5,1);
  lcd.print("vol: " + String(vol));
}

// Interrupciones o whatever

lib_deps = 
  LiquidCrystal
  Wire
  Attach

#include <Arduino.h>
#include <LiquidCrystal.h>
#define cha 2
#define chb 3

LiquidCrystal lcd(8,9,10,11,12,13);

volatile int32_t n = 0;
volatile uint8_t ant = 0;
volatile uint8_t act = 0;

void encoder(){
  ant = act;
  act = PIND & 12;

  if (ant == 8 && act == 0) n++;
  if (ant == 4 && act == 12) n++;
  if (ant == 12 && act == 8) n++;
  if (ant == 0 && act == 4) n++;
  
  if (ant == 4 && act == 0) n++;
  if (ant == 0 && act == 8) n++;
  if (ant == 8 && act == 12) n++;
  if (ant == 12 && act == 4) n++;
}

void setup(){
  pinMode(cha, INPUT);
  pinMode(chb, INPUT);

  lcd.begin(16, 2);
  lcd.setCursor(4,0);
  lcd.print("Encoder");

  attachInterrupt(digitalPinToInterrupt(cha), encoder, CHANGE);
  attachInterrupt(digitalPinToInterrupt(chb), encoder, CHANGE);
}

void loop(){
  lcd.setCursor(2, 1);
  lcd.print("cont: " + String(n));
}

Blanco alimentacion
Azul 
Verde canal A
Amarillo

--------------------------------------------------------------------------------
Clase 5 
--------------------------------------------------------------------------------
Sat Oct  7 08:10:35 2023
Instalé bun, falta agregar el path
export BUN_INSTALL="$HOME/.bun"
export PATH="BUN_INSTALL/bin:$PATH"

Hoy vamos a ver sensores de distancia, funciona como la ecolocalización de los
muerciegalos.

Tiene 4 pines, vcc, trig, echo, end.

Durante 10 microsegundos poner trig en alto.
El pin echo se pone en alto cuando recibe la onda.

En el arduino, se pone en 
duration = pulseIn(echo, HIGH);

d = v * t

velocidad del sonido: 343 m/s

Distancia = 0.034 * duration/2

Filtro pasa loaja media exponencial movil (EMA)

Es un filtro pasa-baja de primer orden cuyo objetivo es atenuar el ruido
presente en las señales.

s(t)
  - y(0) t = 0
  - a y(t) + (1 - a) s(t - 1) t > 0

Donde:
a: Es un factor de suavizado entre 0 y 1
y(t): Es el valor de la señal a filtrar en un período de tiempo t.
s(t):Es el valor EMA en cualquier periodo de tiempo t.
s(t - 1): Es el valor EMA en el periodo de tiempo pasado (t - 1).

# define alpha_config 0.5

--------------------------------------------------------------------------------
Clase 6 
--------------------------------------------------------------------------------
Sat Oct 14 07:56:32 2023
Instalé bun, falta agregar el path
export BUN_INSTALL="$HOME/.bun"
export PATH="BUN_INSTALL/bin:$PATH"

--------------------------------------------------------------------------------
Clase 7
--------------------------------------------------------------------------------
Waiting...
Sat Oct 21 08:02:23 2023

Motores paso a paso
Impresoras 3D

B4 B3 B2 B1   B4 B3 B2 B1  B4 B3 B2 B1
00 00 00 01   00 00 01 01  00 00 00 01
00 00 01 00   00 01 01 00  00 00 01 01
00 01 00 00   01 01 00 00  00 00 01 00
01 00 00 00   01 00 00 01  00 01 01 00
                           00 01 00 00
                           01 01 00 00
                           01 00 00 00
                           01 00 00 01

2,3,4,5 el pueto D
El B sería el 10,11,12,12+1

--------------------------------------------------------------------------------
Clase 8
--------------------------------------------------------------------------------
Aún no ha iniciado la clase.
Sat Oct 28 08:10:16 2023

Finalmente inicia.
Sat Oct 28 08:19:16 2023

Bueno no, llamando lista.
Sat Oct 28 08:20:41 2023

Los transistores tienen 3 pines y hay dos tipos NPN, PNP. PNP penetra y NPN
recibe o no penetra.

Puente H es un integrado que parece H y tiene 4 transistores, dos NPN y dos
PNP.

A B Out
0 0 Off
1 0 Clockwise
0 1 !Clockwise
1 1 Off

--------------------------------------------------------------------------------
Clase 8
--------------------------------------------------------------------------------
Primero vamos a hacer los botones de la aplicación.
Sat Nov 11 08:19:11 2023

Crear una nueva apliación en la apliación web, ir a disposición, agregar
disposición horizontal, altura 80 pixeles.
Cambiar el título.
Cambiar el background.
Agregar el ícono.

Agregar otra disposición horizontal, en el ancho cmabiar por 115 pixeles.
Agregar un botón que tenga alto 70 y ancho 60, la imagen sería la flecha usada.

Agregar otra disposición horizontal con alto de 20 pixeles y ancho ajustar al
contenedor. (Debajo de las dispociones anteriores)

Otra disposición horizontal debajo de las anteriores con alto de 80 pixeles
ancho 30 pixeles.

Botón de 70 pixeles, seguido por disposición horizontal, botón de parar,
disposición horizontal y botón de derecha.

En resumen, crear disposicione horizontales para agregar botones.
